"use strict";var c=require("child_process"),a=require("fs");function p(){try{if(!(0,a.existsSync)("changed.json"))return{totalChanges:0,addedUpdated:0,malwareHits:0};let n=JSON.parse((0,a.readFileSync)("changed.json","utf8")),s=(0,a.existsSync)("malware-hits.json")?JSON.parse((0,a.readFileSync)("malware-hits.json","utf8")):[];return{totalChanges:n.length,addedUpdated:n.length,malwareHits:s.length}}catch{return{totalChanges:0,addedUpdated:0,malwareHits:0}}}function l(){try{if(!(0,a.existsSync)("ossf.json"))return{findings:0,packages:[]};let n=JSON.parse((0,a.readFileSync)("ossf.json","utf8"));return{findings:n.length,packages:n.map(s=>s.package||"unknown")}}catch{return{findings:0,packages:[]}}}function g(){try{if(!(0,a.existsSync)("guarddog.json"))return{totalScanned:0,findings:0,packagesWithIssues:0,skippedEcosystems:[]};let n=JSON.parse((0,a.readFileSync)("guarddog.json","utf8")),s=n.filter(t=>t.errors&&Object.keys(t.errors).length>0?!0:t.results&&Object.keys(t.results).length>0?Object.entries(t.results).filter(([o,e])=>!(e==null||typeof e=="object"&&Object.keys(e).length===0||Array.isArray(e)&&e.length===0)).length>0:!1);return{totalScanned:n.length,findings:n.length,packagesWithIssues:s.length,skippedEcosystems:[]}}catch{return{totalScanned:0,findings:0,packagesWithIssues:0,skippedEcosystems:[]}}}function m(){return{ecosystems:["npm","pip","go"],passed:!0}}function h(n){let{dependencyReview:s,ossf:t,guarddog:r,frozenInstall:o}=n,e=[];e.push("## \u{1F512} Supply Chain Security Scan Results"),e.push("");let i=s.malwareHits>0||t.findings>0||r.packagesWithIssues>0,d=i?"\u26A0\uFE0F":"\u2705",u=i?"Issues Found":"All Checks Passed";return e.push(`### ${d} Overall Status: ${u}`),e.push(""),e.push("### \u{1F4CA} Dependency Changes"),s.addedUpdated>0?(e.push(`- **${s.addedUpdated}** dependencies added/updated`),s.malwareHits>0?e.push(`- \u26A0\uFE0F **${s.malwareHits}** malware vulnerabilities detected`):e.push("- \u2705 No malware vulnerabilities detected")):e.push("- No dependency changes detected"),e.push(""),e.push("### \u{1F6E1}\uFE0F OSSF Malicious Packages Check"),t.findings>0?(e.push(`- \u26A0\uFE0F **${t.findings}** packages matched OSSF database`),e.push(`- Packages: ${t.packages.join(", ")}`)):e.push("- \u2705 No matches found in OSSF malicious packages database"),e.push(""),e.push("### \u{1F415} GuardDog Heuristic Analysis"),r.totalScanned>0?(e.push(`- **${r.totalScanned}** packages scanned`),r.packagesWithIssues>0?e.push(`- \u26A0\uFE0F **${r.packagesWithIssues}** packages with security issues detected`):e.push("- \u2705 No security issues detected"),r.skippedEcosystems.length>0&&e.push(`- Skipped unsupported ecosystems: ${r.skippedEcosystems.join(", ")}`)):e.push("- No packages scanned (no supported ecosystems found)"),e.push(""),e.push("### \u{1F512} Lockfile Integrity Check"),o.passed?e.push("- \u2705 All lockfiles are consistent with package definitions"):e.push("- \u26A0\uFE0F Lockfile inconsistencies detected"),e.push(""),e.push("---"),e.push("*\u{1F916} Generated by [Supply Chain Guard](https://github.com/your-repo/supplychain-guard)*"),e.join(`
`)}async function f(n){try{let s=process.env.GITHUB_REF?.match(/refs\/pull\/(\d+)\/merge/)?.[1];if(!s){console.log("Not a pull request, skipping comment");return}let t=process.env.GITHUB_REPOSITORY;if(!t){console.error("GITHUB_REPOSITORY not found");return}let r="pr-comment-temp.md";(0,a.writeFileSync)(r,n);try{(0,c.execSync)(`gh pr comment ${s} --body-file "${r}" --repo "${t}"`,{stdio:"inherit"})}finally{(0,a.existsSync)(r)&&(0,a.unlinkSync)(r)}console.log(`\u2705 Successfully commented on PR #${s}`)}catch(s){console.error("Failed to comment on PR:",s instanceof Error?s.message:s)}}async function y(){if(!((process.argv[2]||"false")==="true")){console.log("PR comment disabled, skipping");return}console.log("Generating security scan summary...");let s={dependencyReview:p(),ossf:l(),guarddog:g(),frozenInstall:m()},t=h(s);console.log("Generated summary:"),console.log(t),await f(t)}y().catch(n=>{console.error(`PR comment failed: ${n instanceof Error?n.message:n}`),process.exit(1)});
