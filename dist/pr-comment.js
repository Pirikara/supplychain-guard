"use strict";var d=require("child_process"),c=require("fs");function g(){try{if(!(0,c.existsSync)("changed.json"))return{totalChanges:0,addedUpdated:0,malwareHits:0};let t=JSON.parse((0,c.readFileSync)("changed.json","utf8")),n=(0,c.existsSync)("malware-hits.json")?JSON.parse((0,c.readFileSync)("malware-hits.json","utf8")):[];return{totalChanges:t.length,addedUpdated:t.length,malwareHits:n.length}}catch{return{totalChanges:0,addedUpdated:0,malwareHits:0}}}function m(){try{if(!(0,c.existsSync)("ossf.json"))return{findings:0,packages:[],nameOnlyMatches:[]};let t=JSON.parse((0,c.readFileSync)("ossf.json","utf8")),n=t.filter(s=>s.type==="exact_match"),a=t.filter(s=>s.type==="name_match");return{findings:n.length,packages:n.map(s=>s.package||"unknown"),nameOnlyMatches:a.map(s=>({package:s.package||"unknown",ecosystem:s.ecosystem||"unknown"}))}}catch{return{findings:0,packages:[],nameOnlyMatches:[]}}}function h(){try{if(!(0,c.existsSync)("guarddog.json"))return{totalScanned:0,findings:0,packagesWithIssues:0,skippedEcosystems:[]};let t=JSON.parse((0,c.readFileSync)("guarddog.json","utf8")),n=t.filter(s=>s.errors&&Object.keys(s.errors).length>0?!0:s.results&&Object.keys(s.results).length>0?Object.entries(s.results).filter(([e,i])=>!(i==null||typeof i=="object"&&Object.keys(i).length===0||Array.isArray(i)&&i.length===0)).length>0:!1),a=n.map(s=>{let o=[];if(s.errors&&Object.keys(s.errors).length>0)for(let[e,i]of Object.entries(s.errors))o.push(`**${e}**: ${i}`);if(s.results&&Object.keys(s.results).length>0){let e=Object.entries(s.results).filter(([i,r])=>!(r==null||typeof r=="object"&&Object.keys(r).length===0||Array.isArray(r)&&r.length===0));for(let[i,r]of e)Array.isArray(r)&&r.length>0?o.push(`**${i}**: ${r.join(", ")}`):typeof r=="object"?o.push(`**${i}**: ${JSON.stringify(r)}`):o.push(`**${i}**: ${r}`)}return{package:s.package||"unknown",ecosystem:s.ecosystem||"unknown",issues:o}});return{totalScanned:t.length,findings:t.length,packagesWithIssues:n.length,skippedEcosystems:[],detailedFindings:a}}catch{return{totalScanned:0,findings:0,packagesWithIssues:0,skippedEcosystems:[],detailedFindings:[]}}}function f(){return{ecosystems:["npm","pip","go"],passed:!0}}function y(t){let{dependencyReview:n,ossf:a,guarddog:s,frozenInstall:o}=t,e=[];e.push("## \u{1F512} Supply Chain Security Scan Results"),e.push("");let i=n.malwareHits>0||a.findings>0||s.packagesWithIssues>0,r=i?"\u26A0\uFE0F":"\u2705",p=i?"Issues Found":"All Checks Passed";if(e.push(`### ${r} Overall Status: ${p}`),e.push(""),e.push("### \u{1F4CA} Dependency Changes"),n.addedUpdated>0?(e.push(`- **${n.addedUpdated}** dependencies added/updated`),n.malwareHits>0?e.push(`- \u26A0\uFE0F **${n.malwareHits}** malware vulnerabilities detected`):e.push("- \u2705 No malware vulnerabilities detected")):e.push("- No dependency changes detected"),e.push(""),e.push("### \u{1F6E1}\uFE0F OSSF Malicious Packages Check"),a.findings>0){e.push(`- \u{1F6A8} **${a.findings}** exact matches found in OSSF database`),e.push(""),e.push("**CRITICAL: Exact name and version matches in OSSF malicious packages database:**");for(let u of a.packages)e.push(`- \`${u}\` - **EXACT MATCH** with known malicious package`)}else e.push("- \u2705 No exact matches found in OSSF malicious packages database");if(a.nameOnlyMatches.length>0){e.push(""),e.push(`- \u26A0\uFE0F **${a.nameOnlyMatches.length}** packages have name matches (different versions)`),e.push("**Name matches (less critical - different versions):**");for(let u of a.nameOnlyMatches)e.push(`- \`${u.package}\` (${u.ecosystem}) - name matches malicious package database`)}if(e.push(""),e.push("### \u{1F415} GuardDog Heuristic Analysis"),s.totalScanned>0){if(e.push(`- **${s.totalScanned}** packages scanned`),s.packagesWithIssues>0){if(e.push(`- \u26A0\uFE0F **${s.packagesWithIssues}** packages with security issues detected`),s.detailedFindings.length>0){e.push(""),e.push("**Security Issues Found:**");for(let u of s.detailedFindings){e.push(`- \`${u.package}\` (${u.ecosystem})`);for(let l of u.issues)e.push(`  - \u26A0\uFE0F ${l}`)}}}else e.push("- \u2705 No security issues detected");s.skippedEcosystems.length>0&&e.push(`- Skipped unsupported ecosystems: ${s.skippedEcosystems.join(", ")}`)}else e.push("- No packages scanned (no supported ecosystems found)");return e.push(""),e.push("### \u{1F512} Lockfile Integrity Check"),o.passed?e.push("- \u2705 All lockfiles are consistent with package definitions"):e.push("- \u26A0\uFE0F Lockfile inconsistencies detected"),e.push(""),e.push("---"),e.push("*\u{1F916} Generated by [Supply Chain Guard](https://github.com/your-repo/supplychain-guard)*"),e.join(`
`)}async function k(t){try{let n=process.env.GITHUB_REF?.match(/refs\/pull\/(\d+)\/merge/)?.[1];if(!n){console.log("Not a pull request, skipping comment");return}let a=process.env.GITHUB_REPOSITORY;if(!a){console.error("GITHUB_REPOSITORY not found");return}let s="pr-comment-temp.md";(0,c.writeFileSync)(s,t);try{(0,d.execSync)(`gh pr comment ${n} --body-file "${s}" --repo "${a}"`,{stdio:"inherit"})}finally{(0,c.existsSync)(s)&&(0,c.unlinkSync)(s)}console.log(`\u2705 Successfully commented on PR #${n}`)}catch(n){console.error("Failed to comment on PR:",n instanceof Error?n.message:n)}}async function S(){if(!((process.argv[2]||"false")==="true")){console.log("PR comment disabled, skipping");return}console.log("Generating security scan summary...");let n={dependencyReview:g(),ossf:m(),guarddog:h(),frozenInstall:f()},a=y(n);console.log("Generated summary:"),console.log(a),await k(a)}S().catch(t=>{console.error(`PR comment failed: ${t instanceof Error?t.message:t}`),process.exit(1)});
