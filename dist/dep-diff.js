"use strict";var l=require("child_process"),h=require("fs");function p(s,t,e="."){try{let n=e==="."?t:`${e}/${t}`;return(0,l.execSync)(`git show ${s}:${n}`,{encoding:"utf8",stdio:["ignore","pipe","ignore"]})}catch{return null}}function m(){let s="",t="HEAD";try{let e=JSON.parse((0,h.readFileSync)(process.env.GITHUB_EVENT_PATH,"utf8"));s=e?.pull_request?.base?.sha||"",t=e?.pull_request?.head?.sha||"HEAD"}catch{}if(!s)try{s=(0,l.execSync)("git merge-base HEAD origin/HEAD",{encoding:"utf8"}).trim()}catch{s="HEAD~1"}return{base:s,head:t}}function d(s){let t=new Map,n=JSON.parse(s).packages||{};for(let[i,o]of Object.entries(n))if(i.startsWith("node_modules/")){let c=i.split("/"),a="";for(let r=c.length-1;r>=0;r--)if(c[r]==="node_modules"&&r+1<c.length){c[r+1].startsWith("@")&&r+2<c.length?a=`${c[r+1]}/${c[r+2]}`:a=c[r+1];break}a&&t.set(a,o.version)}return t}function y(s){let t=new Map,e=s.split(/\r?\n/),n=null;for(let i of e)if(/^["\s]*(.+@.+)["\s]*:/.test(i)){let o=i.match(/^["\s]*(.+@.+?)["\s]*:/);if(o){let a=o[1].split(/",\s*"/)[0].replace(/^"/,""),r=a.lastIndexOf("@");if(r>0){let g=a.slice(0,r);if(g.startsWith("@")){let f=a.split("@");f.length>=3&&(g=`@${f[1]}`)}n=g}}}else if(n&&i.trim().startsWith('version "')){let o=i.trim().match(/^version "([^"]+)"/);o&&t.set(n,o[1]),n=null}return t}function v(s){let t=new Map;for(let e of s.split(/\r?\n/)){let n=e.match(/^  ([^@\s]+(?:@[^@\s]+)?(?:\/[^@\s]+)?)@([^:]+):/);if(n){t.set(n[1],n[2]);continue}if(n=e.match(/^  \/(@?[^/]+(?:\/[^/]+)?)\/([^:]+):/),n){t.set(n[1],n[2]);continue}}return t}function k(s){let t=new Map,e=JSON.parse(s);for(let n of["dependencies","devDependencies","optionalDependencies"]){let i=e[n]||{};for(let[o,c]of Object.entries(i))t.set(o,c)}return t}function u(s,t="."){let e=p(s,"package-lock.json",t);if(e)return d(e);let n=p(s,"yarn.lock",t);if(n)return y(n);let i=p(s,"pnpm-lock.yaml",t);if(i)return v(i);let o=p(s,"package.json",t);return o?k(o):new Map}(function(){let{base:t,head:e}=m(),n=".";try{let a=(0,l.execSync)("git rev-parse --show-toplevel",{encoding:"utf8"}).trim(),r=process.cwd();if(r!==a){let g=require("path").relative(a,r);g&&!g.startsWith("..")&&(n=g)}}catch{}let i=u(t,n),o=u(e,n),c=[];for(let[a,r]of o.entries()){let g=i.get(a);(!g||g!==r)&&c.push({name:a,version:r})}process.stdout.write(JSON.stringify(c,null,2))})();
